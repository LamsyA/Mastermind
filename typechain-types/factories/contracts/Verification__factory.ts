/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  Verification,
  VerificationInterface,
} from "../../contracts/Verification";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "data",
        type: "string",
      },
    ],
    name: "hashAndStore",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isAddressVerified",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "data",
        type: "string",
      },
    ],
    name: "isHashVerified",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "verifiedAddresses",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "verifiedHashes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506103ae806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063a50cce5011610050578063a50cce50146100b7578063a91f947d146100da578063d0e3496a146100ed57600080fd5b806314fd081f1461006c578063374146e214610094575b600080fd5b3360009081526001602052604090205460ff165b604051901515815260200160405180910390f35b6100806100a2366004610213565b60006020819052908152604090205460ff1681565b6100806100c536600461022c565b60016020526000908152604090205460ff1681565b6100806100e8366004610298565b610102565b6101006100fb366004610298565b610144565b005b600080826040516020016101169190610349565b60408051601f19818403018152918152815160209283012060009081529182905290205460ff169392505050565b61014d81610102565b156101b8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f4861736820616c72656164792076657269666965640000000000000000000000604482015260640160405180910390fd5b6000816040516020016101cb9190610349565b60408051808303601f19018152918152815160209283012060009081528083528181208054600160ff1991821681179092553383529381905291902080549092161790555050565b60006020828403121561022557600080fd5b5035919050565b60006020828403121561023e57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461026257600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000602082840312156102aa57600080fd5b813567ffffffffffffffff808211156102c257600080fd5b818401915084601f8301126102d657600080fd5b8135818111156102e8576102e8610269565b604051601f8201601f19908116603f0116810190838211818310171561031057610310610269565b8160405282815287602084870101111561032957600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000825160005b8181101561036a5760208186018101518583015201610350565b50600092019182525091905056fea26469706673582212200567d3fdee4d0930283e23a42f48f619417b20a5affcd4b326b5b979ad3e2def64736f6c63430008180033";

type VerificationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VerificationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Verification__factory extends ContractFactory {
  constructor(...args: VerificationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Verification> {
    return super.deploy(overrides || {}) as Promise<Verification>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Verification {
    return super.attach(address) as Verification;
  }
  override connect(signer: Signer): Verification__factory {
    return super.connect(signer) as Verification__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VerificationInterface {
    return new utils.Interface(_abi) as VerificationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Verification {
    return new Contract(address, _abi, signerOrProvider) as Verification;
  }
}
